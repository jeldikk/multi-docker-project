services:
  redis:
    container_name: redis_container
    image: redis:alpine3.20
    restart: always
    ports:
      - 6379:6379
    command: redis-server --loglevel warning
    # volumes:
    #   - ./docker-volumes/cache:/data

  postgres:
    container_name: postgres_container
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      POSTGRES_DB: multi_container_app
    ports:
      - 5432:5432
    # volumes:
    #   - ./postgres-volumes/postgres:/var/lib/postgresql

  client:
    container_name: client_container
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    volumes:
      - /app/node_modules
      - ~/workspace/multi-container-app/client:/app
    depends_on:
      - api
      - nginx

  api:
    container_name: server_container
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    ports:
      - 5000:5000
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - SERVER_PORT=5000

      - REDIS_PORT=6379
      - REDIS_HOST=redis

      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=multi_container_app
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    depends_on:
      - postgres
      - redis
      - nginx
  
  worker:
    container_name: worker_container
    build: 
      context: ./worker
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
      - nginx
  
  nginx:
    container_name: nginx_container
    image: nginx
    build: 
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports:
      - 3050:80
    restart: always
